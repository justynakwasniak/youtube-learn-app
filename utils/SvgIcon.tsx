import React from 'react';
import { View, StyleSheet } from 'react-native';
import Svg, { Path } from 'react-native-svg';

// Types
interface SvgIconProps {
  width?: number;
  height?: number;
  color?: string;
  style?: any;
}

// Search Icon Component
export const SearchIcon: React.FC<SvgIconProps> = ({ 
  width = 24, 
  height = 24, 
  color = '#2B2D42',
  style 
}) => (
  <View style={[styles.container, style]}>
    <Svg width={width} height={height} viewBox="0 0 32 32" fill="none">
      <Path
        d="M21.0607 21.0815L28 28M24 14C24 19.5228 19.5228 24 14 24C8.47715 24 4 19.5228 4 14C4 8.47715 8.47715 4 14 4C19.5228 4 24 8.47715 24 14Z"
        stroke={color}
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </Svg>
  </View>
);

// Settings Icon Component
export const SettingsIcon: React.FC<SvgIconProps> = ({ 
  width = 24, 
  height = 24, 
  color = '#2B2D42',
  style 
}) => (
  <View style={[styles.container, style]}>
    <Svg width={width} height={height} viewBox="0 0 32 32" fill="none">
      <Path
        d="M16 20C18.2091 20 20 18.2091 20 16C20 13.7909 18.2091 12 16 12C13.7909 12 12 13.7909 12 16C12 18.2091 13.7909 20 16 20Z"
        stroke={color}
        strokeWidth="2"
      />
      <Path
        d="M18.3539 2.86961C17.8637 2.66663 17.2425 2.66663 16 2.66663C14.7575 2.66663 14.1363 2.66663 13.6461 2.86961C12.9928 3.14027 12.4736 3.6594 12.203 4.3128C12.0794 4.61108 12.0311 4.95796 12.0122 5.46395C11.9844 6.20753 11.603 6.89581 10.9586 7.26787C10.3142 7.63991 9.52746 7.62601 8.86959 7.27831C8.42194 7.04169 8.09735 6.91012 7.77726 6.86799C7.07606 6.77567 6.36691 6.96568 5.80582 7.39623C5.38499 7.71913 5.07437 8.25716 4.45311 9.3332C3.83186 10.4093 3.52123 10.9473 3.45199 11.4732C3.35969 12.1744 3.5497 12.8835 3.98025 13.4446C4.17675 13.7008 4.45294 13.916 4.88159 14.1853C5.51174 14.5813 5.91719 15.2558 5.91715 16C5.91711 16.7441 5.51167 17.4185 4.88158 17.8144C4.45287 18.0838 4.17665 18.2992 3.98011 18.5553C3.54957 19.1164 3.35955 19.8254 3.45187 20.5266C3.5211 21.0525 3.83173 21.5906 4.45298 22.6666C5.07425 23.7426 5.38487 24.2808 5.80569 24.6036C6.36678 25.0341 7.07593 25.2241 7.77713 25.1318C8.09719 25.0897 8.42177 24.9581 8.86939 24.7216C9.5273 24.3738 10.3141 24.36 10.9585 24.732C11.603 25.1041 11.9844 25.7924 12.0122 26.5361C12.0311 27.042 12.0794 27.3889 12.203 27.6872C12.4736 28.3405 12.9928 28.8597 13.6461 29.1304C14.1363 29.3333 14.7575 29.3333 16 29.3333C17.2425 29.3333 17.8637 29.3333 18.3539 29.1304C19.0072 28.8597 19.5264 28.3405 19.7969 27.6872C19.9205 27.3889 19.9689 27.042 19.9879 26.536C20.0156 25.7924 20.3969 25.1041 21.0413 24.732C21.6857 24.3598 22.4725 24.3738 23.1305 24.7216C23.5781 24.9581 23.9027 25.0896 24.2227 25.1317C24.9239 25.2241 25.6331 25.0341 26.1941 24.6036C26.6149 24.2806 26.9256 23.7426 27.5468 22.6665C28.1681 21.5905 28.4788 21.0525 28.548 20.5266C28.6403 19.8254 28.4503 19.1162 28.0197 18.5552C27.8232 18.299 27.5469 18.0837 27.1183 17.8144C26.4883 17.4185 26.0828 16.744 26.0828 15.9998C26.0828 15.2557 26.4883 14.5814 27.1183 14.1856C27.5471 13.9161 27.8233 13.7009 28.0199 13.4446C28.4504 12.8836 28.6404 12.1745 28.5481 11.4733C28.4789 10.9474 28.1683 10.4093 27.5469 9.33329C26.9257 8.25725 26.6151 7.71923 26.1943 7.39632C25.6332 6.96577 24.924 6.77576 24.2228 6.86808C23.9028 6.91021 23.5783 7.04177 23.1305 7.27836C22.4727 7.62608 21.6859 7.63999 21.0415 7.26791C20.3969 6.89584 20.0156 6.20751 19.9879 5.46388C19.9689 4.95793 19.9205 4.61107 19.7969 4.3128C19.5264 3.6594 19.0072 3.14027 18.3539 2.86961Z"
        stroke={color}
        strokeWidth="2"
      />
    </Svg>
  </View>
);

// Home Icon Component
export const HomeIcon: React.FC<SvgIconProps> = ({ 
  width = 24, 
  height = 24, 
  color = '#2B2D42',
  style 
}) => (
  <View style={[styles.container, style]}>
    <Svg width={width} height={height} viewBox="0 0 32 32" fill="none">
      <Path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16.8186 1.61424C16.3371 1.23975 15.663 1.23975 15.1815 1.61424L3.18143 10.9476C2.85665 11.2002 2.66669 11.5886 2.66669 12V26.6667C2.66669 28.1395 3.86059 29.3334 5.33335 29.3334H26.6667C28.1395 29.3334 29.3334 28.1395 29.3334 26.6667V12C29.3334 11.5886 29.1434 11.2002 28.8186 10.9476L16.8186 1.61424ZM21.3334 26.6667H26.6667V12.6521L16 4.35585L5.33335 12.6521V26.6667H10.6667V16C10.6667 15.2636 11.2636 14.6667 12 14.6667H20C20.7364 14.6667 21.3334 15.2636 21.3334 16V26.6667ZM13.3334 26.6667V17.3334H18.6667V26.6667H13.3334Z"
        fill={color}
      />
    </Svg>
  </View>
);

// Back Arrow Icon Component
export const BackArrowIcon: React.FC<SvgIconProps> = ({ 
  width = 24, 
  height = 24, 
  color = '#007AFF',
  style 
}) => (
  <View style={[styles.container, style]}>
    <Svg width={width} height={height} viewBox="0 0 32 32" fill="none">
      <Path
        d="M28.8 16H3.20001M3.20001 16L14.4 4.80005M3.20001 16L14.4 27.2"
        stroke={color}
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </Svg>
  </View>
);

// Views Icon Component
export const ViewsIcon: React.FC<SvgIconProps> = ({ 
  width = 24, 
  height = 24, 
  color = '#333',
  style 
}) => (
  <View style={[styles.container, style]}>
    <Svg width={width} height={height} viewBox="0 0 32 32" fill="none">
      <Path
        d="M9.33333 28L16 22.6667L22.6667 28M10.4 22.6667H21.6C23.8403 22.6667 24.9603 22.6667 25.816 22.2307C26.5687 21.8472 27.1805 21.2353 27.564 20.4827C28 19.6269 28 18.5069 28 16.2667V10.4C28 8.15979 28 7.03968 27.564 6.18404C27.1805 5.43139 26.5687 4.81947 25.816 4.43597C24.9603 4 23.8403 4 21.6 4H10.4C8.15979 4 7.03968 4 6.18404 4.43597C5.43139 4.81947 4.81947 5.43139 4.43597 6.18404C4 7.03968 4 8.15979 4 10.4V16.2667C4 18.5069 4 19.6269 4.43597 20.4827C4.81947 21.2353 5.43139 21.8472 6.18404 22.2307C7.03968 22.6667 8.15979 22.6667 10.4 22.6667Z"
        stroke={color}
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </Svg>
  </View>
);

// Likes Icon Component
export const LikesIcon: React.FC<SvgIconProps> = ({ 
  width = 24, 
  height = 24, 
  color = '#333',
  style 
}) => (
  <View style={[styles.container, style]}>
    <Svg width={width} height={height} viewBox="0 0 32 32" fill="none">
      <Path
        d="M11.4825 24.8576V17.7792"
        stroke={color}
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <Path
        d="M2.92138 16.2176C2.88959 15.6374 2.97644 15.0568 3.17662 14.5113C3.37679 13.9656 3.68606 13.4666 4.08558 13.0446C4.4851 12.6226 4.96646 12.2864 5.50024 12.0567C6.03404 11.827 6.60907 11.7086 7.19019 11.7086C7.77131 11.7086 8.34632 11.827 8.88011 12.0567C9.41391 12.2864 9.89527 12.6226 10.2948 13.0446C10.6943 13.4666 11.0036 13.9656 11.2038 14.5113C11.4039 15.0568 11.4908 15.6374 11.459 16.2176V23.424C11.4908 24.0042 11.4039 24.585 11.2038 25.1305C11.0036 25.6761 10.6943 26.175 10.2948 26.597C9.89527 27.019 9.41391 27.3552 8.88011 27.5849C8.34632 27.8145 7.77131 27.9331 7.19019 27.9331C6.60907 27.9331 6.03404 27.8145 5.50024 27.5849C4.96646 27.3552 4.4851 27.019 4.08558 26.597C3.68606 26.175 3.37679 25.6761 3.17662 25.1305C2.97644 24.585 2.88959 24.0042 2.92138 23.424V16.2176Z"
        stroke={color}
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <Path
        d="M11.4826 23.424C11.4792 23.987 11.5868 24.5452 11.7991 25.0668C12.0115 25.5883 12.3246 26.0629 12.7204 26.4636C13.1161 26.8641 13.5869 27.1828 14.106 27.4013C14.6249 27.6199 15.1818 27.7342 15.745 27.7376H21.0186C22.2482 27.7367 23.4445 27.3369 24.4276 26.5984C25.4108 25.8598 26.128 24.8222 26.4714 23.6416L28.3914 17.1392C28.5442 16.7069 28.5916 16.2444 28.5298 15.7902C28.4678 15.3359 28.2984 14.903 28.0356 14.5275C27.7727 14.1519 27.4239 13.8444 27.0182 13.6308C26.6126 13.4172 26.1618 13.3035 25.7034 13.2992H18.6378V6.54075C18.6395 6.29533 18.5928 6.05204 18.5005 5.82466C18.4081 5.59728 18.2719 5.39032 18.0994 5.2156C17.9272 5.04086 17.7221 4.90177 17.4959 4.80629C17.2699 4.71083 17.0272 4.66086 16.7818 4.65918C16.378 4.66101 15.9858 4.79449 15.6648 5.03934C15.3436 5.28419 15.1112 5.62706 15.0026 6.01598L11.4826 17.7408"
        stroke={color}
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </Svg>
  </View>
);

// Fullscreen Icon Component
export const FullscreenIcon: React.FC<SvgIconProps> = ({ 
  width = 24, 
  height = 24, 
  color = '#fff',
  style 
}) => (
  <View style={[styles.container, style]}>
    <Svg width={width} height={height} viewBox="0 0 32 32" fill="none">
      <Path
        d="M12.0001 5.33327H5.33343L5.33337 12M26.6667 11.9999V5.33329L20 5.33325M20 26.6666H26.6667V20M5.33337 20V26.6666H12.0001"
        stroke={color}
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </Svg>
  </View>
);

// Person Icon Component
export const PersonIcon: React.FC<SvgIconProps> = ({ 
  width = 24, 
  height = 24, 
  color = '#2B2D42',
  style 
}) => (
  <View style={[styles.container, style]}>
    <Svg width={width} height={height} viewBox="0 0 32 32" fill="none">
      <Path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M26.5001 28.8H5.50108C4.37085 28.8 3.53624 27.6848 3.96253 26.6592C5.94042 21.9168 10.5871 19.2 15.9998 19.2C21.4141 19.2 26.0607 21.9168 28.0386 26.6592C28.4649 27.6848 27.6303 28.8 26.5001 28.8ZM9.46667 9.59998C9.46667 6.07038 12.3984 3.19998 15.9998 3.19998C19.6028 3.19998 22.5329 6.07038 22.5329 9.59998C22.5329 13.1296 19.6028 16 15.9998 16C12.3984 16 9.46667 13.1296 9.46667 9.59998ZM31.9291 28.2176C30.7417 22.8432 27.0276 18.8767 22.1392 17.0767C24.7296 15.0335 26.2404 11.7295 25.6851 8.11189C25.0416 3.91509 21.4778 0.556763 17.1757 0.067163C11.2371 -0.609637 6.20011 3.91838 6.20011 9.59998C6.20011 12.624 7.63087 15.3183 9.86192 17.0767C4.9719 18.8767 1.25946 22.8432 0.0704384 28.2176C-0.360746 30.1712 1.2464 32 3.28636 32H28.7132C30.7548 32 32.3619 30.1712 31.9291 28.2176Z"
        fill={color}
      />
    </Svg>
  </View>
);

const styles = StyleSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center',
  },
});
